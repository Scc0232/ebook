<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhijian.ebook.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.zhijian.ebook.entity.Order" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="TINYINT" />
    <result column="dep_price" property="depPrice" jdbcType="DOUBLE" />
    <result column="desposit" property="desposit" jdbcType="DOUBLE" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_price" property="productPrice" jdbcType="DOUBLE" />
    <result column="product_icon" property="productIcon" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="address_id" property="addressId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, order_status, product_id, product_type, dep_price, desposit, product_name, 
    product_price, product_icon, userid, count, address_id, create_time, message, is_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zhijian.ebook.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from e_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from e_order
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from e_order
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zhijian.ebook.entity.OrderExample" >
    delete from e_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhijian.ebook.entity.Order" >
  <selectKey keyProperty="id" resultType="String" order="BEFORE">
        SELECT REPLACE(UUID(),'-','')
    </selectKey>
    insert into e_order (id, order_no, order_status, 
      product_id, product_type, dep_price, 
      desposit, product_name, product_price, 
      product_icon, userid, count, 
      address_id, create_time, message, 
      is_valid)
    values (#{id,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, 
      #{productId,jdbcType=VARCHAR}, #{productType,jdbcType=TINYINT}, #{depPrice,jdbcType=DOUBLE}, 
      #{desposit,jdbcType=DOUBLE}, #{productName,jdbcType=VARCHAR}, #{productPrice,jdbcType=DOUBLE}, 
      #{productIcon,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, 
      #{addressId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{message,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.zhijian.ebook.entity.Order" >
    insert into e_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="depPrice != null" >
        dep_price,
      </if>
      <if test="desposit != null" >
        desposit,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productPrice != null" >
        product_price,
      </if>
      <if test="productIcon != null" >
        product_icon,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=TINYINT},
      </if>
      <if test="depPrice != null" >
        #{depPrice,jdbcType=DOUBLE},
      </if>
      <if test="desposit != null" >
        #{desposit,jdbcType=DOUBLE},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        #{productPrice,jdbcType=DOUBLE},
      </if>
      <if test="productIcon != null" >
        #{productIcon,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhijian.ebook.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from e_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update e_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.productType != null" >
        product_type = #{record.productType,jdbcType=TINYINT},
      </if>
      <if test="record.depPrice != null" >
        dep_price = #{record.depPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.desposit != null" >
        desposit = #{record.desposit,jdbcType=DOUBLE},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productPrice != null" >
        product_price = #{record.productPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.productIcon != null" >
        product_icon = #{record.productIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update e_order
    set id = #{record.id,jdbcType=VARCHAR},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=VARCHAR},
      product_type = #{record.productType,jdbcType=TINYINT},
      dep_price = #{record.depPrice,jdbcType=DOUBLE},
      desposit = #{record.desposit,jdbcType=DOUBLE},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_price = #{record.productPrice,jdbcType=DOUBLE},
      product_icon = #{record.productIcon,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      message = #{record.message,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhijian.ebook.entity.Order" >
    update e_order
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=TINYINT},
      </if>
      <if test="depPrice != null" >
        dep_price = #{depPrice,jdbcType=DOUBLE},
      </if>
      <if test="desposit != null" >
        desposit = #{desposit,jdbcType=DOUBLE},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productPrice != null" >
        product_price = #{productPrice,jdbcType=DOUBLE},
      </if>
      <if test="productIcon != null" >
        product_icon = #{productIcon,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhijian.ebook.entity.Order" >
    update e_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=VARCHAR},
      product_type = #{productType,jdbcType=TINYINT},
      dep_price = #{depPrice,jdbcType=DOUBLE},
      desposit = #{desposit,jdbcType=DOUBLE},
      product_name = #{productName,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DOUBLE},
      product_icon = #{productIcon,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      message = #{message,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>